{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger Library API",
    "license": {
      "name": "MIT"
    }
  },
  "host": "localhost:8080",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "List all users",
        "operationId": "listUsers",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many items to return at one time (max 100)",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "x-next": {
                "type": "string",
                "description": "A link to the next page of responses"
              }
            },
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create an user",
        "operationId": "createUser",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object",
            "required": true,
            "schema" : {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created"
          },
          "400": {
            "description": "Validation exception"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Info for a specific user",
        "operationId": "showUserById",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The id of the user to retrieve",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update a specific user",
        "operationId": "updateUserById",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The id of the user to retrieve",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "User object",
            "required": true,
            "schema" : {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User replaced"
          },
          "400": {
            "description": "Validation exception"
          },
          "404": {
            "description": "User not found"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a specific user",
        "operationId": "removeUserById",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The id of the user to delete",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/books": {
      "get": {
        "summary": "List all books",
        "operationId": "listBooks",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many items to return at one time (max 100)",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "An paged array of pets",
            "headers": {
              "x-next": {
                "type": "string",
                "description": "A link to the next page of responses"
              }
            },
            "schema": {
              "$ref": "#/definitions/Books"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create a book",
        "operationId": "createBook",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Book object",
            "required": true,
            "schema" : {
              "$ref": "#/definitions/NewBook"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Book created"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/books/{bookId}": {
      "get": {
        "summary": "Info for a specific book",
        "operationId": "showBookById",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "description": "The id of the user to retrieve",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a specific book",
        "operationId": "removeBookById",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "description": "The id of the user to retrieve",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update a specific book",
        "operationId": "updateBookById",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "description": "The id of the user to retrieve",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Book object",
            "required": true,
            "schema" : {
              "$ref": "#/definitions/NewBook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "id",
        "name",
        "surname",
        "documentNumber",
        "age",
        "gender"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "documentNumber": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "format": "int64"
        },
        "gender": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "NewUser": {
      "required": [
        "name",
        "surname",
        "documentNumber",
        "age",
        "gender"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "documentNumber": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "format": "int64"
        },
        "gender": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "Book": {
      "required": [
        "id",
        "title",
        "author",
        "editorial"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "editorial": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "NewBook": {
      "required": [
        "title",
        "author",
        "editorial"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "editorial": {
          "type": "string"
        }
      }
    },
    "Books": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Book"
      }
    },
    "Error": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}